package main

const UNCONSTRAINED float32 = -1.0

type Scalar = float32

type Geometry struct {
	x float32
	y float32
	w float32
	h float32
}

type Constraint struct {
	minWidth float32
	minHeight float32
	maxWidth float32
	maxHeight float32
}

type Constrainable interface {
	constraint() *Constraint
}

type LayoutTarget interface {
	GetIntrinsicGeometry(geo Geometry)
}

type Context struct {
}

type Box struct {
	x Scalar
	y Scalar
}

func (b Box) SetX(x Scalar) {
	b.x = x
}

func NewContext() Context {
	return Context{}
}

func (c Context) AddText(s string) {
}

func (c Context) AddBox(fn func(box *Box, c2 Context)) {

}

func RenderTest() {
	ctx := NewContext()

	ctx.AddBox(func (box *Box, c Context) {
		box.SetX(3.0)
	})
}



